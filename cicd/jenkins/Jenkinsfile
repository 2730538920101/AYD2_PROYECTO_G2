pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                agent: multi-stage
            spec:
              containers:
                - name: git
                  image: alpine/git
                  command:
                    - cat
                  tty: true
                  volumeMounts:
                    - name: shared-volume
                      mountPath: /workspace  # Punto de montaje del volumen compartido
                - name: kaniko
                  image: gcr.io/kaniko-project/executor:debug
                  imagePullPolicy: Always
                  command:
                    - sleep
                  args:
                    - "9999999"
                  volumeMounts:
                    - name: jenkins-docker-cfg
                      mountPath: /kaniko/.docker
                    - name: shared-volume
                      mountPath: /workspace  # Punto de montaje del volumen compartido
                - name: terraform
                  image: hashicorp/terraform:latest
                  command:
                    - sleep
                  args:
                    - "9999999"
                  volumeMounts:
                    - name: shared-volume
                      mountPath: /workspace  # Punto de montaje del volumen compartido
              volumes:
                - name: jenkins-docker-cfg
                  projected:
                    sources:
                      - secret:
                          name: dockerhub-credentials-secret
                          items:
                            - key: .dockerconfigjson
                              path: config.json
                - name: shared-volume
                  emptyDir: {}  # Define un volumen compartido
            """
        }
    }
    stages {
        stage('Checkout to develop') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Github-credentials', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                        container('git') {
                            sh '''
                            git config --global credential.helper store
                            echo "https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com" > ~/.git-credentials
                            git config --global --add safe.directory /home/jenkins/agent/workspace/ayd2-proyecto/ayd2-proyecto-pipeline
                            git checkout develop
                            '''
                        }
                    }
                }
            }
        }
        // stage('Build and Push app service Image') {
        //     steps {
        //         container('kaniko') {
        //             sh """
        //             /kaniko/executor --context backend/app_service/ --dockerfile Dockerfile \
        //             --destination carlosmz87/ayd2_p1_app_service:latest \
        //             --destination carlosmz87/ayd2_p1_app_service:${BUILD_NUMBER}
        //             """
        //         }
        //     }
        // }
        // stage('Build and Push notification producer service Image') {
        //     steps {
        //         container('kaniko') {
        //             sh """
        //             /kaniko/executor --context backend/notification_service/producer/ --dockerfile Dockerfile \
        //             --destination carlosmz87/ayd2_p1_notification_producer:latest \
        //             --destination carlosmz87/ayd2_p1_notification_producer:${BUILD_NUMBER}
        //             """
        //         }
        //     }
        // }
        // stage('Build and Push notification consumer service Image') {
        //     steps {
        //         container('kaniko') {
        //             sh """
        //             /kaniko/executor --context backend/notification_service/consumer/ --dockerfile Dockerfile \
        //             --destination carlosmz87/ayd2_p1_notification_consumer:latest \
        //             --destination carlosmz87/ayd2_p1_notification_consumer:${BUILD_NUMBER}
        //             """
        //         }
        //     }
        // }
        // stage('Build and Push Frontend Image') {
        //     steps {
        //         container('kaniko') {
        //             sh """
        //             /kaniko/executor --context frontend/ --dockerfile Dockerfile \
        //             --destination carlosmz87/ayd2_p1_frontend:latest \
        //             --destination carlosmz87/ayd2_p1_frontend:${BUILD_NUMBER}
        //             """
        //         }
        //     }
        // }
        stage('Deploy app with terraform') {
            steps {
                container('terraform') {
                    sh '''
                    cd /workspace/infrastructure  # Cambiar al directorio compartido
                    terraform --version
                    ssh-keygen -t rsa -b 4096 -f ayd2_p1_bastion_key -q -N ""
                    sleep 5  # Espera para asegurar que el archivo est√© listo
                    ls -l  # Listar archivos en el directorio actual
                    '''
                    archiveArtifacts artifacts: '/workspace/infrastructure/ayd2_p1_bastion_key*', allowEmptyArchive: false
                }
            }
        }
    }
}
