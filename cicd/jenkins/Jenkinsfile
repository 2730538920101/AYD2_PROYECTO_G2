pipeline {
    agent {
        kubernetes {
            label 'docker-pod'
            defaultContainer 'docker'
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                some-label: my-value
            spec:
              containers:
              - name: docker
                image: docker:20.10.16  # Specify a version for stability
                command:
                - cat
                tty: true
                volumeMounts:
                - name: docker-socket
                  mountPath: /var/run/docker.sock
                resources:                     # Optional: Define resources
                  requests:
                    memory: "512Mi"
                    cpu: "500m"
                  limits:
                    memory: "1Gi"
                    cpu: "1"
              - name: jnlp
                image: jenkins/inbound-agent:latest
                args: ['-url', '${JENKINS_URL}', '${JENKINS_SECRET}', '${JENKINS_AGENT_NAME}']
                volumeMounts:
                - name: docker-socket
                  mountPath: /var/run/docker.sock
              volumes:
              - name: docker-socket
                hostPath:
                  path: /var/run/docker.sock
            """
        }
    }

    stages {
        stage('Execute Docker Command') {
            steps {
                container('docker') {
                    sh 'docker ps || exit 1'  // Add error handling
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
