pipeline {
    agent {
        kubernetes {
            label 'jenkins-slave'
            defaultContainer 'jnlp'
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                agent: jenkins-slave
            spec:
              containers:
              - name: jnlp
                image: jenkins/inbound-agent:alpine
                args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
              - name: docker
                image: docker:20.10.7 # Imagen con Docker CLI
                command:
                - cat
                tty: true
                volumeMounts:
                - name: docker-sock
                  mountPath: /var/run/docker.sock
              securityContext:
                fsGroup: 1000
              volumes:
              - name: docker-sock
                hostPath:
                  path: /var/run/docker.sock
            """
        }
    }
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('Dockerhub-credentials') // Credenciales de Docker Hub
    }

    stages {
        stage("Checkout") {
            steps {
                script {
                    echo "GIT CHECKOUT STAGE"
                    withCredentials([usernamePassword(credentialsId: 'Github-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                        git url: "https://${GIT_USER}:${GIT_PASSWORD}@github.com/2730538920101/AYD2_PROYECTO_G2.git", branch: 'develop'
                    }
                }
            }
        }
        stage("Docker build and push") {
            steps {
                container('docker') {
                    script {
                        echo "Building and pushing Docker images"
                        
                        sh """
                        docker build -t carlosmz87/ayd2_p1_app_service:latest backend/app_service
                        docker build -t carlosmz87/ayd2_p1_notification_producer:latest backend/notification_service/producer
                        docker build -t carlosmz87/ayd2_p1_notification_consumer:latest backend/notification_service/consumer
                        docker build -t carlosmz87/ayd2_p1_frontend:latest frontend
                        """
                        
                        docker.withRegistry('', 'Dockerhub-credentials') {
                            sh """
                            docker push carlosmz87/ayd2_p1_app_service:latest
                            docker push carlosmz87/ayd2_p1_notification_producer:latest
                            docker push carlosmz87/ayd2_p1_notification_consumer:latest
                            docker push carlosmz87/ayd2_p1_frontend:latest
                            """
                        }
                    }
                }
            }
        }
    }
}
