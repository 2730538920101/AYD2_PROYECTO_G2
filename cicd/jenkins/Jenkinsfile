pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                agent: multi-stage
            spec:
              containers:
                - name: git
                  image: alpine/git
                  command:
                    - cat
                  tty: true
                - name: kaniko
                  image: gcr.io/kaniko-project/executor:debug
                  imagePullPolicy: Always
                  command:
                    - sleep
                  args:
                    - "9999999"
                  volumeMounts:
                    - name: jenkins-docker-cfg
                      mountPath: /kaniko/.docker
                - name: terraform
                  image: hashicorp/terraform:latest
                  command:
                    - sleep
                  args:
                    - "9999999"
              volumes:
                - name: jenkins-docker-cfg
                  projected:
                    sources:
                      - secret:
                          name: dockerhub-credentials-secret
                          items:
                            - key: .dockerconfigjson
                              path: config.json
            """
        }
    }
    stages {
        
        stage('Checkout to Develop') {
            steps {
                container('git') {
                    sh '''
                    git checkout develop
                    ls
                    '''
                }
            }
        }
        stage('Deploy app with terraform') {
            steps {
                container('terraform') {
                    sh '''
                    terraform --version
                    ls
                    '''

                    // Agrega aqu√≠ otros comandos de Terraform, como init, plan o apply
                }
            }
        }
    }
}
